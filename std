const fs = require("fs");

exports.std = () => {
  let internal = {};

  global.scriptArgs = process.argv;

  internal.exit = (exitCode = 0) => process.exit(exitCode);
  internal.evalScript = (code) => eval(code);
  internal.loadFile = filename => {
    try {
      filename = fs.readFileSync(filename, { encoding: "utf-8" })
    } catch(e) {
      filename = null;
    }
    return filename;
  };

  /* TODO: Global eval */
  //internal.loadScript = filename => eval(loadFile(filename));

  internal.open = (filename, mode) => {
    let fd = {};
    fd.internalFd = fs.openSync(filename, mode);
    fd.read = (buffer, position, len) => fs.readSync(fd.internalFd, buffer, position, len);
    fd.puts = (str) => fs.writeSync(fd.internalFd, str);
    fd.close = () => fs.closeSync(fd.internalFd);
    return fd;
  }

  internal.close = fd => fs.closeSync(fd); 
  return internal;
};
